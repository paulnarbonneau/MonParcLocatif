{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as CryptoJs from 'crypto-js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\n\nfunction LoginComponent_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Le login est obligatoire\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, LoginComponent_div_6_div_1_Template, 2, 0, \"div\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.user.errors.required);\n  }\n}\n\nfunction LoginComponent_div_11_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Le mot de passe est obligatoire\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, LoginComponent_div_11_div_1_Template, 2, 0, \"div\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.password.errors.required);\n  }\n}\n\nconst _c0 = function (a1) {\n  return {\n    \"form-control\": true,\n    \"is-invalid\": a1\n  };\n};\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor() {\n      this.loginFormGroup = new FormGroup({\n        user: new FormControl('', Validators.required),\n        password: new FormControl('', Validators.required)\n      });\n    }\n\n    ngOnInit() {//this.showStatus();\n    }\n\n    onSubmit() {\n      console.log(JSON.stringify(this.loginFormGroup.value));\n      console.log(`Username : ${this.loginFormGroup.value.user}`);\n      console.log(`password : ${CryptoJs.AES.encrypt(this.loginFormGroup.value.user, \"doudou\")}`);\n    }\n\n    showStatus() {\n      var _a;\n\n      console.log(this.user);\n      console.log(this.user.invalid && (this.user.dirty || this.user.touched));\n      console.log((_a = this.user.errors) === null || _a === void 0 ? void 0 : _a.required);\n    }\n\n    get password() {\n      return this.loginFormGroup.get('password');\n    }\n\n    get user() {\n      return this.loginFormGroup.get('user');\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)();\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"mpl-login\"]],\n    decls: 14,\n    vars: 10,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"userInput\", 1, \"form-control-label\"], [\"id\", \"userInput\", \"type\", \"text\", \"formControlName\", \"user\", \"required\", \"\", 3, \"ngClass\", \"keyup\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [1, \"form-group\", \"has-danger\"], [\"for\", \"passwordInput\", 1, \"form-control-label\"], [\"id\", \"passwordInput\", \"type\", \"password\", \"formControlName\", \"password\", \"required\", \"\", 3, \"ngClass\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\"], [1, \"invalid-feedback\"], [4, \"ngIf\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"fieldset\")(2, \"div\", 1)(3, \"label\", 2);\n        i0.ɵɵtext(4, \"Nom d'utilisateur\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"input\", 3);\n        i0.ɵɵlistener(\"keyup\", function LoginComponent_Template_input_keyup_5_listener() {\n          return ctx.showStatus();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, LoginComponent_div_6_Template, 2, 1, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 5)(8, \"label\", 6);\n        i0.ɵɵtext(9, \"Mot de passe\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 7);\n        i0.ɵɵtemplate(11, LoginComponent_div_11_Template, 2, 1, \"div\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"button\", 8);\n        i0.ɵɵtext(13, \"Valider\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.loginFormGroup);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c0, ctx.user.invalid && (ctx.user.dirty || ctx.user.touched)));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.user.invalid && (ctx.user.dirty || ctx.user.touched));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, ctx.password.invalid && (ctx.password.dirty || ctx.password.touched)));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.password.invalid && (ctx.password.dirty || ctx.password.touched));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !ctx.loginFormGroup.valid);\n      }\n    },\n    dependencies: [i1.NgClass, i1.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}